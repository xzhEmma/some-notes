# -*- coding: utf-8 -*-
"""My_vgg16.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1enxKujBInt85sWWf5c1M4JZRh_eqQCRo
"""

import torch
import torch.nn as nn

class my_vgg16(nn.Module):
  def __init__(self):
    super(my_vgg16,self).__init__()
    self.feature = nn.Sequential(
        nn.Conv2d(3,64,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(64,64,3,1,1),
        nn.ReLU(True),
        nn.MaxPool2d(2,2,0),

        nn.Conv2d(64,128,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(128,128,3,1,1),
        nn.ReLU(True),
        nn.MaxPool2d(2,2,0),

        nn.Conv2d(128,256,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(256,256,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(256,256,3,1,1),
        nn.ReLU(True),
        #64 256 56 56
        nn.MaxPool2d(2,2,0),

        nn.Conv2d(256,512,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(512,512,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(512,512,3,1,1),
        nn.ReLU(True),
        nn.MaxPool2d(2,2,0),
      
        nn.Conv2d(512,512,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(512,512,3,1,1),
        nn.ReLU(True),
        nn.Conv2d(512,512,3,1,1),
        nn.ReLU(True),
        nn.MaxPool2d(2,2,0),

    )
    self.avgpool = nn.AdaptiveAvgPool2d((7,7))
    self.classifier = nn.Sequential(
        nn.Linear(512*7*7,4096),
        nn.ReLU(True),
        nn.Dropout(),
        nn.Linear(4096,4096),
        nn.ReLU(True),
        nn.Dropout(),
        nn.Linear(4096,10)
    )
    self.conv = nn.Conv2d(1,3,1,1,0)

  def forward(self,input):
    #图像变三通道
      out = self.conv(input)
      out = self.feature(out)
      out = self.avgpool(out)
      out = out.view(out.size(0),512*7*7)
      out = self.classifier(out)
      return out

#from torchsummary import summary
#vgg=my_vgg16()
#print(vgg,(3*224*224))